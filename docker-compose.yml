## 下準備 ##
# 1. docker-compose.ymlにrename
# 2. コメントアウトの説明文に沿って編集する
# 3. <docker-compose.ymlを配置したカレントディレクトリ>/plugins ディレクトリ配下にビルドしたgigantic.jar+各種依存プラグインを配置する
# 4. docker-compose up  ※初回ビルドはspigotをビルドするため十数分かかります
# 5. 起動しただけだとdbの設定が違う。変更するために一旦Ctrl+Cでコンテナを止める
# 6. <docker-compose.ymlを配置したカレントディレクトリ>/plugins/Gigantic/database.ymlを編集
#    - 接続先ホストを”localhost”から"db"に変更
#    - Passwordを"password"に変更
# 7. docker-compose up

## 下準備完了後 ##
# - minecraftを起動し、接続アドレスに<dockerホスト名orIP>を指定すると接続できます
# - dbは"http://<dockerホスト名orIP>:8080"で閲覧/編集可能です
# - let's develop もくもく!!


version: '3.3'

networks:
  gigantic-develop:
    external: false

services:

  # spigotサーバー本体のコンテナ
  mc-spigot:
    image: itzg/minecraft-server
    ports:
      # ホストアドレス:25565 でアクセス可能とする
      - "25565:25565"
    environment:
      - TYPE=SPIGOT
      # BUILD_FROM_SOURCE未指定だとビルド済のspigot.jarを直接DLするため非推奨
      - VERSION=1.20.2
      # EULAに同意した上でtrueに書き換えてください
      - EULA=true
      # ゲーム内OP権限を使用したいMinecraftIDに書き換えてください
      - OPS=mc_ikakura
      - TZ=Asia/Tokyo
    volumes:
      # pluginsディレクトリをマウント(jarやconfig.ymlなどを手動配置したうえで起動してください)
      - ./plugins:/data/plugins
      # ログディレクトリをマウント(ホストPCで手軽に見れ流ようにする)
      - ./logs:/data/logs
    networks:
      - gigantic-develop
